var tokenAuth = require('../lib/tokenAuth'),
    session = require('express-session'),
    MongoStore = require('connect-mongo')(session),
    RedisStore = require('connect-redis')(session),
    fs = require('fs')
    ;

var port = 3000,
    token = 'mySecretToken',
    secret = 'secretSessionWordGoesHere';

module.exports = {
    default : {
        address: '127.0.0.1',
        port: port
    },
    withEndPoint : {
        address: '127.0.0.1',
        port: port,
        endpoint: "/api/rest"
    },
    withTokenAuth : {
        address: '127.0.0.1',
        port: port,
        auth: tokenAuth,
        token: token,
        session: session({
            secret: secret,
            // cookie: { maxAge: /*60000*/ 600000 },
            resave: false,
            saveUninitialized: true
        })
    },
    withTokenAuthHttps : {
        address: '127.0.0.1',
        port: port,
        https: {
            key: fs.readFileSync('test/ssl/server.key', 'utf8'),
            cert: fs.readFileSync('test/ssl/server.crt', 'utf8')
        },
        auth: tokenAuth,
        token: token,
        session: session({
            secret: secret,
            // cookie: { maxAge: /*60000*/ 600000 },
            resave: false,
            saveUninitialized: true
        })
    },
    withTokenAuthAndMongoSession : {
        address: '127.0.0.1',
        port: port,
        auth: tokenAuth,
        token: token,
        session: session({
            secret: secret,
            cookie: { maxAge: /*6000*/ /*60000*/ 600000 },
            store: new MongoStore({
                // // url: 'mongodb://localhost:27017/mongo_store_serverio' + (app.get('env') ? '_' + app.get('env') : '')
                url: 'mongodb://localhost:27017/mongo_store_serverio' + (process.env.NODE_ENV ? '_' + process.env.NODE_ENV : '')
                // url: 'mongodb://CloudFoundry_psquj6fl_oiodh1pj_8lknrkkt:_M8JhkiSJaApfHrq_Yg4XOy_icIxYfPM@ds031865.mlab.com:31865/CloudFoundry_psquj6fl_oiodh1pj'
            }),
            resave: false,
            saveUninitialized: true
        })
    },
    withTokenAuthAndMongoSessionHttps : {
        address: '127.0.0.1',
        port: port,
        https: {
            key: fs.readFileSync('test/ssl/server.key', 'utf8'),
            cert: fs.readFileSync('test/ssl/server.crt', 'utf8')
        },
        auth: tokenAuth,
        token: token,
        session: session({
            secret: secret,
            cookie: { maxAge: /*6000*/ /*60000*/ 600000 },
            store: new MongoStore({
                // // url: 'mongodb://localhost:27017/mongo_store_serverio' + (app.get('env') ? '_' + app.get('env') : '')
                url: 'mongodb://localhost:27017/mongo_store_serverio' + (process.env.NODE_ENV ? '_' + process.env.NODE_ENV : '')
                // url: 'mongodb://CloudFoundry_psquj6fl_oiodh1pj_8lknrkkt:_M8JhkiSJaApfHrq_Yg4XOy_icIxYfPM@ds031865.mlab.com:31865/CloudFoundry_psquj6fl_oiodh1pj'
            }),
            resave: false,
            saveUninitialized: true
        })
    },
    withTokenAuthAndRedisSession : {
        address: '127.0.0.1',
        port: port,
        auth: tokenAuth,
        token: token,
        session: session({
            secret: secret,
            cookie: { maxAge: /*6000*/ /*60000*/ 600000 },
            store: new RedisStore({
                prefix:'sess'
            }),
            resave: false,
            saveUninitialized: true
        })
    }
};
